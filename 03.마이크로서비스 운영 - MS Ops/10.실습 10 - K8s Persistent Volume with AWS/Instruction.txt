Instruction

Volumes

container-orchestrationyaml# 의 경로에서
cd volumeaws
Volumes  emptyDir
kubectl apply -f volume-emptydir.yaml
지정 컨테이너 접속 후, 파일 생성
kubectl exec -it shared-volumes --container redis -- binbash
cd datashared
echo test…  test.txt
exit
다른 컨테이너로 접속 후, 파일 확인
kubectl exec -it shared-volumes --container nginx -- binbash
cd datashared
ls
Volumes  hostPath
kubectl apply -f volume-hostpath.yaml
Node의 Local 디스크 경로를 Pod에 마운트
같은 hostPath에 있는 볼륨은 여러 Pod사이에서 공유
Pod가 삭제되어도 hostPath에 있는 파일은 유지
Pod가 재기동 되어 다른 Node에서 기동될 경우,
새로운 Node의 hostPath를 사용
Node의 로그 파일을 읽는 로그 에이전트 컨테이너 등에 사용가능
Pod 생성 및 확인 (Pod 내, ls -al datashared)
Volumes example  gitRepo
kubectl apply -f volume-gitrepo.yaml
Pod 생성시 지정된 Git 리파지토리의 특정 리비전을
Cloning하여 디스크 볼륨 생성
물리적으로는 emptyDir이 생성되고 Git Clone 수행
HTML 같은 정적 파일 및 Nodejs 같은 스크립트 기반코드 배포에 유용
StorageClass - Dynamic PV Provisioning
kubectl get storageclass
아래와 같은 결과가 출력되었는지 확인해 줍니다.
NAME            PROVISIONER             RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE
gp2 (default)   kubernetes.ioaws-ebs   Delete          WaitForFirstConsumer   false                  2d1h
EFS계정 생성 및 Role 바인딩
ServerAccount 생성
kubectl apply -f efs-sa.yaml
SA(efs-provisioner)에 권한(rbac) 설정
kubectl apply -f efs-rbac.yaml
efs-provisioner-deploy.yaml 파일에서
value #{efs system id} = 파일 시스템 ID
value # {aws region} = EKS 리전
server # {file-system-id}.efs.{aws-region}.amazonaws.com

provisioner 설치
kubectl apply -f efs-provisioner-deploy.yaml
StorageClass 등록, 조회
kubectl apply -f efs-storageclass.yaml
kubectl get sc
아래와 같은 결과가 출력되었는지 확인해 줍니다.
NAME            PROVISIONER             RECLAIMPOLICY   VOLUMEBINDINGMODE      ALLOWVOLUMEEXPANSION   AGE
aws-efs         my-aws.comaws-efs      Delete          Immediate              false                  4s
gp2 (default)   kubernetes.ioaws-ebs   Delete          WaitForFirstConsumer   false                  2d2h
pvc 생성
kubectl apply -f volume-pvc.yaml
아래와 같은 결과가 출력되었는지 확인해 줍니다.
persistentvolumeclaimaws-efs created
pvc 조회
kubectl get pvc
아래와 같은 결과가 출력되었는지 확인해 줍니다.
NAME      STATUS    VOLUME   CAPACITY   ACCESS MODES   STORAGECLASS   AGE
aws-efs   Bound                                        aws-efs        59s
Create Pod with PersistentVolumeClaim
kubectl apply -f pod-with-pvc.yaml
kubectl get pod
kubectl describe pod mypod
kubectl exec -it mypod -- binbash
cd mntaws
df -k 로 PVC 마운트 확인